# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'DecimalDegreesConverter.ui'
#
# Created by: PyQt5 UI code generator 5.15.7
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_DecimalDegreeConverter(object):
    def setupUi(self, DecimalDegreeConverter):
        DecimalDegreeConverter.setObjectName("DecimalDegreeConverter")
        DecimalDegreeConverter.resize(400, 91)
        self.DecDeg = QtWidgets.QLineEdit(DecimalDegreeConverter)
        self.DecDeg.setGeometry(QtCore.QRect(210, 9, 181, 31))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.DecDeg.setFont(font)
        self.DecDeg.setAlignment(QtCore.Qt.AlignCenter)
        self.DecDeg.setObjectName("DecDeg")
        self.dd_label = QtWidgets.QLabel(DecimalDegreeConverter)
        self.dd_label.setGeometry(QtCore.QRect(20, 10, 191, 31))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.dd_label.setFont(font)
        self.dd_label.setObjectName("dd_label")
        self.converted = QtWidgets.QLineEdit(DecimalDegreeConverter)
        self.converted.setGeometry(QtCore.QRect(10, 50, 191, 31))
        self.converted.setMinimumSize(QtCore.QSize(191, 31))
        self.converted.setMaximumSize(QtCore.QSize(191, 31))
        font = QtGui.QFont()
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.converted.setFont(font)
        self.converted.setAlignment(QtCore.Qt.AlignCenter)
        self.converted.setObjectName("converted")
        self.clearBtn = QtWidgets.QPushButton(DecimalDegreeConverter)
        self.clearBtn.setGeometry(QtCore.QRect(220, 52, 51, 31))
        self.clearBtn.setObjectName("clearBtn")
        self.okBtn = QtWidgets.QPushButton(DecimalDegreeConverter)
        self.okBtn.setGeometry(QtCore.QRect(280, 52, 51, 31))
        self.okBtn.setObjectName("okBtn")
        self.closeBtn = QtWidgets.QPushButton(DecimalDegreeConverter)
        self.closeBtn.setGeometry(QtCore.QRect(340, 52, 51, 31))
        self.closeBtn.setObjectName("closeBtn")

        self.retranslateUi(DecimalDegreeConverter)
        self.clearBtn.clicked.connect(self.DecDeg.clear) # type: ignore
        self.clearBtn.clicked.connect(self.converted.clear) # type: ignore
        self.closeBtn.clicked.connect(DecimalDegreeConverter.close) # type: ignore
        QtCore.QMetaObject.connectSlotsByName(DecimalDegreeConverter)

    def clear(self):
        self.DecDeg.setText("")
        self.converted.setText("")

    def Decimal_to_DMS(self):
        
        val = str(self.DecDeg.text())

        dd = val.split('.')[0]
        d = int(val.split('.')[1]) * 60
        m = str(d).split('.')[0][:2]
        m_num = str(d)[2:]
        sec_f = float('.' + m_num) * 60
        s = str(sec_f).split('.')[0]
        
        answer = '{}Â°{}\"{}\''.format(dd,m,s)
        
        self.converted.setText(answer)

    def retranslateUi(self, DecimalDegreeConverter):
        _translate = QtCore.QCoreApplication.translate
        DecimalDegreeConverter.setWindowTitle(_translate("DecimalDegreeConverter", "Decimal Degree Converter"))
        self.dd_label.setText(_translate("DecimalDegreeConverter", "Decimal Degrees to Convert"))
        self.clearBtn.setText(_translate("DecimalDegreeConverter", "Clear"))
        self.okBtn.setText(_translate("DecimalDegreeConverter", "OK"))
        self.closeBtn.setText(_translate("DecimalDegreeConverter", "Close"))
        self.okBtn.clicked.connect(self.Decimal_to_DMS)

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    DecimalDegreeConverter = QtWidgets.QDialog()
    ui = Ui_DecimalDegreeConverter()
    ui.setupUi(DecimalDegreeConverter)
    DecimalDegreeConverter.show()
    sys.exit(app.exec_())
